{
  "edges" : [
    [
      "meow",
      "print"
    ],
    [
      "Dog",
      "Animal     override func speak()         bark()        func bark()         print(\"Woof\")"
    ],
    [
      "main",
      "Dog"
    ],
    [
      "speak",
      "print"
    ],
    [
      "<current_file>",
      "Foundation"
    ],
    [
      "main",
      "Cat"
    ],
    [
      "main",
      "makeAnimalSpeak"
    ],
    [
      "main",
      "= Cat"
    ],
    [
      "bark",
      "print"
    ],
    [
      "main",
      "let cat = Cat"
    ],
    [
      "main",
      "let dog = Dog"
    ],
    [
      "main",
      "dog = Dog"
    ],
    [
      "makeAnimalSpeak",
      "animal.speak"
    ],
    [
      "Cat",
      "Animal     override func speak()         meow()        func meow()         print(\"Meow\")"
    ],
    [
      "<current_file>",
      "Foundationclass Animal     func speak()         print(\"...\")    class Dog: Animal     override func speak()         bark()        func bark()         print(\"Woof\")    class Cat: Animal     override func speak()         meow()        func meow()         print(\"Meow\")    func makeAnimalSpeak(animal: Animal)     animal.speak()func main()     let dog = Dog()    let cat = Cat()    makeAnimalSpeak(animal: dog)    makeAnimalSpeak(animal: cat)"
    ],
    [
      "main",
      "= Dog"
    ],
    [
      "main",
      "cat = Cat"
    ]
  ],
  "nodes" : [
    "Animal     override func speak()         meow()        func meow()         print(\"Meow\")",
    "cat = Cat",
    "Foundation",
    "= Dog",
    "let dog = Dog",
    "meow",
    "main",
    "print",
    "Foundationclass Animal     func speak()         print(\"...\")    class Dog: Animal     override func speak()         bark()        func bark()         print(\"Woof\")    class Cat: Animal     override func speak()         meow()        func meow()         print(\"Meow\")    func makeAnimalSpeak(animal: Animal)     animal.speak()func main()     let dog = Dog()    let cat = Cat()    makeAnimalSpeak(animal: dog)    makeAnimalSpeak(animal: cat)",
    "speak",
    "Cat",
    "makeAnimalSpeak",
    "dog = Dog",
    "let cat = Cat",
    "= Cat",
    "animal.speak",
    "Dog",
    "Animal     override func speak()         bark()        func bark()         print(\"Woof\")",
    "bark"
  ]
}